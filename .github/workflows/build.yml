name: Build Android Debug APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        submodules: true


    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython

    - name: Set up Java and Android SDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Install Android SDK Commandline Tools 
      run: | echo 
      "ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk" 
      >> $GITHUB_ENV export 
      ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk 
      mkdir -p "$ANDROID_HOME/cmdline-tools" wget 
      -q 
      https://dl.google.com/android/repository/commandlinetools-linux-13114758_latest.zip 
      -O /tmp/commandlinetools.zip unzip -q 
      /tmp/commandlinetools.zip -d 
      "$ANDROID_HOME/cmdline-tools" mv 
      "$ANDROID_HOME/cmdline-tools/cmdline-tools" 
      "$ANDROID_HOME/cmdline-tools/latest"

    - name: Accept Android SDK Licenses
      env:
        ANDROID_HOME: $HOME/.buildozer/android/platform/android-sdk
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

    - name: Install SDK packages
      env:
        ANDROID_HOME: $HOME/.buildozer/android/platform/android-sdk
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root="$ANDROID_HOME" \
          "build-tools;36.0.0" \
          "platforms;android-33" \
          "platform-tools" \
          "ndk;25.1.8937393"

    - name: Add Android tools to PATH
      run: |
        echo "$HOME/.buildozer/android/platform/android-sdk/platform-tools" >> $GITHUB_PATH
        echo "$HOME/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH

    - name: Build with Buildozer
      run: |
        mkdir -p logs
        buildozer -v android debug | tee logs/buildozer-output.log

    - name: Check if .buildozer directory exists
      run: |
        if [ -d .buildozer ]; then
          echo ".buildozer directory exists ✅"
          echo "Listing contents:"
          ls -la .buildozer
        else
          echo "❌ .buildozer directory NOT found"
          exit 1
        fi

    - name: Upload .buildozer folder as artifact (for debugging)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: buildozer-folder
        path: .buildozer

    - name: Upload APK Artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: webview-app-debug-apk
        path: bin/*.apk

    - name: Upload Build Log Artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: buildozer-log
        path: .buildozer/buildozer.log buildozer.spec

    - name: Upload Terminal Output Log (terminal)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: buildozer-output-log
        path: logs/buildozer-output.log
