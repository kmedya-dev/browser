name: Build Android Debug APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        submodules: true

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Cache Android SDK
      id: cache-android-sdk
      uses: actions/cache@v4
      with:
        path: ~/.buildozer/android/platform/android-sdk
        key: ${{ runner.os }}-android-sdk-33-ndk-25.1.8937393

    - name: Install Android SDK Build Tools and Platform Tools
      if: steps.cache-android-sdk.outputs.cache-hit != 'true'
      run: |
        export ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk
        mkdir -p "$ANDROID_HOME"

        # Download and set up command-line tools
        curl -sL -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://github.com/kmedya-dev/browser/releases/download/v1.0.0/commandlinetools-linux-13114758_latest.zip" -o /tmp/commandlinetools.zip
        unzip -q /tmp/commandlinetools.zip -d "$ANDROID_HOME/cmdline-tools"
        mv "$ANDROID_HOME/cmdline-tools/cmdline-tools" "$ANDROID_HOME/cmdline-tools/latest"

        # Create legacy path for sdkmanager and accept licenses
        # This is the most reliable way to ensure all licenses are accepted.
        # The "Broken pipe" warning is harmless and will only appear once when the cache is being created.
        mkdir -p "$ANDROID_HOME/tools/bin"
        ln -sf "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" "$ANDROID_HOME/tools/bin/sdkmanager"
        yes | "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_HOME" --licenses >/dev/null 2>&1 || true

        # Install SDK packages
        "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_HOME" \
          "build-tools;33.0.2" \
          "platforms;android-33" \
          "platform-tools" \
          "ndk;25.1.8937393"

    - name: Set Android Environment Variables
      run: |
        echo "ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
        echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
        echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH

    - name: Install OpenSSL development libraries
      run: sudo apt-get update && sudo apt-get install -y libssl-dev

    - name: Check if .buildozer directory exists
      run: |
        if [ -d .buildozer ]; then
          echo ".buildozer directory exists ✅"
          ls -la .buildozer
        else
          echo "❌ .buildozer directory NOT found"
          exit 1
        fi

    - name: Build with Buildozer
      run: |
        mkdir -p logs
        buildozer -v android debug | tee logs/buildozer-output.log

    - name: Upload APK Artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: webview-app-debug-apk
        path: bin/*.apk

    - name: Upload Build Log Artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: buildozer-log
        path: .buildozer/buildozer.log

    - name: Upload Spec File Artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: buildozer-spec
        path: buildozer.spec

    - name: Upload Terminal Output Log
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: buildozer-output-log
        path: logs/buildozer-output.log