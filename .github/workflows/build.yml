name: Build Android Debug APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.7'

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # Install APT dependencies
      - name: Install APT prerequisites
        run: |
          sudo apt-get update
      #    sudo apt-get install -y $(grep -vE '^\s*#' prerequisites.txt | tr '\n' ' ')

      # Install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Android SDK Build Tools
        run: |
          export ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk
          mkdir -p "$ANDROID_HOME"

          # Download command line tools
          wget -q "https://dl.google.com/android/repository/commandlinetools-linux-13114758_latest.zip" -O /tmp/cmdline-tools.zip
          unzip -q /tmp/cmdline-tools.zip -d "$ANDROID_HOME/cmdline-tools"
          mv "$ANDROID_HOME/cmdline-tools/cmdline-tools" "$ANDROID_HOME/cmdline-tools/latest"

          # Symlink sdkmanager for legacy usage
          mkdir -p "$ANDROID_HOME/tools/bin"
          ln -sf "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" "$ANDROID_HOME/tools/bin/sdkmanager"

          # Accept all SDK licenses
          yes | "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_HOME" --licenses

          # Install required SDK components (pin platform name)
          "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_HOME" \
            "build-tools;36.0.0" \
            "platforms;android-36" \
            "platform-tools" \
            "ndk;28.2.13676358"

      # Export Android environment variables
      - name: Set Android Environment Variables
        run: |
          echo "ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
          #  echo "ANDROID_NDK_ROOT=$HOME/.buildozer/android/platform/android-sdk/ndk/28.2.13676358" >> $GITHUB_ENV
          echo "$HOME/.buildozer/android/platform/android-sdk/platform-tools" >> $GITHUB_PATH
          echo "$HOME/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH

      - name: List platform directory
        run: |
          ls -l $HOME/.buildozer/android/platform

      # Clean buildozer cache before build
      - name: Clean buildozer cache
        run: |
          if [ -d ".buildozer/android/platform/python-for-android" ]; then
              buildozer android clean
          fi

      # Build APK
      - name: Build final APK
        run: |
          buildozer -v android debug

      # Upload APK Artifact
      - name: Upload APK Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: webview-app-debug-apk
          path: bin/*.apk

      # Upload entire .buildozer directory (intermediate files)
      - name: Upload buildozer cache
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: buildozer-cache
          path: .buildozer/**
